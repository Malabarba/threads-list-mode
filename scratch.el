;; This buffer is for notes you don’t want to save, and for Lisp evaluation.
;; If you want to create a file, visit that file with C-x C-f,
;; then enter the text in that file’s own buffer.


(funcall (plist-get (car (auth-source-search :host "api.github.com" :max 1))
                    :secret))
(auth-source-forget-all-cached)

company-backends
(company-emoji company-bbdb company-nxml company-css company-eclim company-semantic company-clang company-xcode company-cmake (company-capf company-dabbrev-code company-keywords company-gtags company-etags) (company-dabbrev-code company-gtags company-etags company-keywords) company-oddmuse company-files company-dabbrev)

(weaver-list-create :name "Github"
              :fields weaver--github-thread-format
              :visit-address '(subject url)
              :visit-function (lambda (x) (browse-url
                                      (replace-regexp-in-string "//api\\.github.com/repos" "//github.com" x)))
              ;; :display-function
              :paging-function (weaver--github-pager "notifications"))

(weaver-thread-create :name "Github Issue"
                :header-fields `[((user login))
                                 ("  ")
                                 ((updated_at) . ,weaver-field-time-ago)]
                :body-address '(body)
                :visit-address '(html_url)
                ;; :display-function
                :content-function (weaver--github-pager "https://api.github.com/repos/clojure-emacs/cider-nrepl/issues/270/comments"))

(paradox--github-action (concat .repository.url
                                (format "/issues/%s/comments" .number))
  :max-pages 1
  :reader #'weblist--json-reader)
(car (paradox--github-action "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls/270/comments"
       :max-pages 1
       :reader #'weblist--json-reader))
.user.login
.user.avatar_url
.body
.updated_at
.html_url

((url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls/270")
 (id . 48812628)
 (html_url . "https://github.com/clojure-emacs/cider-nrepl/pull/270")
 (diff_url . "https://github.com/clojure-emacs/cider-nrepl/pull/270.diff")
 (patch_url . "https://github.com/clojure-emacs/cider-nrepl/pull/270.patch")
 (issue_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/issues/270")
 (number . 270)
 (state . "closed")
 (locked)
 (title . "Correctly resolve resource full path in Boot projects")
 (user (login . "env0der") (id . 443906) (avatar_url . "https://avatars.githubusercontent.com/u/443906?v=3") (gravatar_id . "") (url . "https://api.github.com/users/env0der") (html_url . "https://github.com/env0der") (followers_url . "https://api.github.com/users/env0der/followers") (following_url . "https://api.github.com/users/env0der/following{/other_user}") (gists_url . "https://api.github.com/users/env0der/gists{/gist_id}") (starred_url . "https://api.github.com/users/env0der/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/env0der/subscriptions") (organizations_url . "https://api.github.com/users/env0der/orgs") (repos_url . "https://api.github.com/users/env0der/repos") (events_url . "https://api.github.com/users/env0der/events{/privacy}") (received_events_url . "https://api.github.com/users/env0der/received_events") (type . "User") (site_admin))
 (body . "A followup to https://github.com/clojure-emacs/cider/pull/1374

Short summary: when project is using [Boot](https://github.com/boot-clj/boot), the source files are copied to temporary folder and class path points to that folder. This leads to ```cider-find-var``` opening a source file in temp folder instead of an original one.

The original class-path is stored by [Boot](https://github.com/boot-clj/boot) in a system property named ```fake.class.path``` (see https://github.com/boot-clj/boot/issues/249).

This fix checks if system property ```fake.class.path``` exists and if yes, assumes that ```Boot``` is used and resolves resources through a class-loader that knows about original paths.

I've tested it for my project and it works. I don't know how to cover this with unit tests, though. Any ideas?")
 (created_at . "2015-10-26T23:47:13Z")
 (updated_at . "2015-11-11T09:32:00Z")
 (closed_at . "2015-11-11T09:31:43Z")
 (merged_at . "2015-11-11T09:31:43Z")
 (merge_commit_sha . "62ff3afe7fe18cc00775ba3095286febee329bce")
 (assignee)
 (milestone)
 (commits_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls/270/commits")
 (review_comments_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls/270/comments")
 (review_comment_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls/comments{/number}")
 (comments_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/issues/270/comments")
 (statuses_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/statuses/fbcecbaf10bb55aae875f93810b67b41c833da21")
 (head (label . "env0der:resource-path-fix-for-boot") (ref . "resource-path-fix-for-boot") (sha . "fbcecbaf10bb55aae875f93810b67b41c833da21") (user (login . "env0der") (id . 443906) (avatar_url . "https://avatars.githubusercontent.com/u/443906?v=3") (gravatar_id . "") (url . "https://api.github.com/users/env0der") (html_url . "https://github.com/env0der") (followers_url . "https://api.github.com/users/env0der/followers") (following_url . "https://api.github.com/users/env0der/following{/other_user}") (gists_url . "https://api.github.com/users/env0der/gists{/gist_id}") (starred_url . "https://api.github.com/users/env0der/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/env0der/subscriptions") (organizations_url . "https://api.github.com/users/env0der/orgs") (repos_url . "https://api.github.com/users/env0der/repos") (events_url . "https://api.github.com/users/env0der/events{/privacy}") (received_events_url . "https://api.github.com/users/env0der/received_events") (type . "User") (site_admin)) (repo (id . 44995851) (name . "cider-nrepl") (full_name . "env0der/cider-nrepl") (owner (login . "env0der") (id . 443906) (avatar_url . "https://avatars.githubusercontent.com/u/443906?v=3") (gravatar_id . "") (url . "https://api.github.com/users/env0der") (html_url . "https://github.com/env0der") (followers_url . "https://api.github.com/users/env0der/followers") (following_url . "https://api.github.com/users/env0der/following{/other_user}") (gists_url . "https://api.github.com/users/env0der/gists{/gist_id}") (starred_url . "https://api.github.com/users/env0der/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/env0der/subscriptions") (organizations_url . "https://api.github.com/users/env0der/orgs") (repos_url . "https://api.github.com/users/env0der/repos") (events_url . "https://api.github.com/users/env0der/events{/privacy}") (received_events_url . "https://api.github.com/users/env0der/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/env0der/cider-nrepl") (description . "nREPL middleware for CIDER") (fork . t) (url . "https://api.github.com/repos/env0der/cider-nrepl") (forks_url . "https://api.github.com/repos/env0der/cider-nrepl/forks") (keys_url . "https://api.github.com/repos/env0der/cider-nrepl/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/env0der/cider-nrepl/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/env0der/cider-nrepl/teams") (hooks_url . "https://api.github.com/repos/env0der/cider-nrepl/hooks") (issue_events_url . "https://api.github.com/repos/env0der/cider-nrepl/issues/events{/number}") (events_url . "https://api.github.com/repos/env0der/cider-nrepl/events") (assignees_url . "https://api.github.com/repos/env0der/cider-nrepl/assignees{/user}") (branches_url . "https://api.github.com/repos/env0der/cider-nrepl/branches{/branch}") (tags_url . "https://api.github.com/repos/env0der/cider-nrepl/tags") (blobs_url . "https://api.github.com/repos/env0der/cider-nrepl/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/env0der/cider-nrepl/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/env0der/cider-nrepl/git/refs{/sha}") (trees_url . "https://api.github.com/repos/env0der/cider-nrepl/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/env0der/cider-nrepl/statuses/{sha}") (languages_url . "https://api.github.com/repos/env0der/cider-nrepl/languages") (stargazers_url . "https://api.github.com/repos/env0der/cider-nrepl/stargazers") (contributors_url . "https://api.github.com/repos/env0der/cider-nrepl/contributors") (subscribers_url . "https://api.github.com/repos/env0der/cider-nrepl/subscribers") (subscription_url . "https://api.github.com/repos/env0der/cider-nrepl/subscription") (commits_url . "https://api.github.com/repos/env0der/cider-nrepl/commits{/sha}") (git_commits_url . "https://api.github.com/repos/env0der/cider-nrepl/git/commits{/sha}") (comments_url . "https://api.github.com/repos/env0der/cider-nrepl/comments{/number}") (issue_comment_url . "https://api.github.com/repos/env0der/cider-nrepl/issues/comments{/number}") (contents_url . "https://api.github.com/repos/env0der/cider-nrepl/contents/{+path}") (compare_url . "https://api.github.com/repos/env0der/cider-nrepl/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/env0der/cider-nrepl/merges") (archive_url . "https://api.github.com/repos/env0der/cider-nrepl/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/env0der/cider-nrepl/downloads") (issues_url . "https://api.github.com/repos/env0der/cider-nrepl/issues{/number}") (pulls_url . "https://api.github.com/repos/env0der/cider-nrepl/pulls{/number}") (milestones_url . "https://api.github.com/repos/env0der/cider-nrepl/milestones{/number}") (notifications_url . "https://api.github.com/repos/env0der/cider-nrepl/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/env0der/cider-nrepl/labels{/name}") (releases_url . "https://api.github.com/repos/env0der/cider-nrepl/releases{/id}") (created_at . "2015-10-26T20:39:15Z") (updated_at . "2015-10-26T20:39:16Z") (pushed_at . "2015-11-11T09:12:58Z") (git_url . "git://github.com/env0der/cider-nrepl.git") (ssh_url . "git@github.com:env0der/cider-nrepl.git") (clone_url . "https://github.com/env0der/cider-nrepl.git") (svn_url . "https://github.com/env0der/cider-nrepl") (homepage) (size . 658) (stargazers_count . 0) (watchers_count . 0) (language . "Clojure") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 0) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master")))
 (base (label . "clojure-emacs:master") (ref . "master") (sha . "24cb9545ffb0c248bc5a8e473305abd506a7856b") (user (login . "clojure-emacs") (id . 5080083) (avatar_url . "https://avatars.githubusercontent.com/u/5080083?v=3") (gravatar_id . "") (url . "https://api.github.com/users/clojure-emacs") (html_url . "https://github.com/clojure-emacs") (followers_url . "https://api.github.com/users/clojure-emacs/followers") (following_url . "https://api.github.com/users/clojure-emacs/following{/other_user}") (gists_url . "https://api.github.com/users/clojure-emacs/gists{/gist_id}") (starred_url . "https://api.github.com/users/clojure-emacs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/clojure-emacs/subscriptions") (organizations_url . "https://api.github.com/users/clojure-emacs/orgs") (repos_url . "https://api.github.com/users/clojure-emacs/repos") (events_url . "https://api.github.com/users/clojure-emacs/events{/privacy}") (received_events_url . "https://api.github.com/users/clojure-emacs/received_events") (type . "Organization") (site_admin)) (repo (id . 15360927) (name . "cider-nrepl") (full_name . "clojure-emacs/cider-nrepl") (owner (login . "clojure-emacs") (id . 5080083) (avatar_url . "https://avatars.githubusercontent.com/u/5080083?v=3") (gravatar_id . "") (url . "https://api.github.com/users/clojure-emacs") (html_url . "https://github.com/clojure-emacs") (followers_url . "https://api.github.com/users/clojure-emacs/followers") (following_url . "https://api.github.com/users/clojure-emacs/following{/other_user}") (gists_url . "https://api.github.com/users/clojure-emacs/gists{/gist_id}") (starred_url . "https://api.github.com/users/clojure-emacs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/clojure-emacs/subscriptions") (organizations_url . "https://api.github.com/users/clojure-emacs/orgs") (repos_url . "https://api.github.com/users/clojure-emacs/repos") (events_url . "https://api.github.com/users/clojure-emacs/events{/privacy}") (received_events_url . "https://api.github.com/users/clojure-emacs/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/clojure-emacs/cider-nrepl") (description . "nREPL middleware for CIDER") (fork) (url . "https://api.github.com/repos/clojure-emacs/cider-nrepl") (forks_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/forks") (keys_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/teams") (hooks_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/hooks") (issue_events_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/issues/events{/number}") (events_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/events") (assignees_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/assignees{/user}") (branches_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/branches{/branch}") (tags_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/tags") (blobs_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/git/refs{/sha}") (trees_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/statuses/{sha}") (languages_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/languages") (stargazers_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/stargazers") (contributors_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/contributors") (subscribers_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/subscribers") (subscription_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/subscription") (commits_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/commits{/sha}") (git_commits_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/git/commits{/sha}") (comments_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/comments{/number}") (issue_comment_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/issues/comments{/number}") (contents_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/contents/{+path}") (compare_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/merges") (archive_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/downloads") (issues_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/issues{/number}") (pulls_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls{/number}") (milestones_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/milestones{/number}") (notifications_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/labels{/name}") (releases_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/releases{/id}") (created_at . "2013-12-21T15:27:38Z") (updated_at . "2015-11-10T19:46:16Z") (pushed_at . "2015-11-11T09:31:43Z") (git_url . "git://github.com/clojure-emacs/cider-nrepl.git") (ssh_url . "git@github.com:clojure-emacs/cider-nrepl.git") (clone_url . "https://github.com/clojure-emacs/cider-nrepl.git") (svn_url . "https://github.com/clojure-emacs/cider-nrepl") (homepage) (size . 2280) (stargazers_count . 209) (watchers_count . 209) (language . "Clojure") (has_issues . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 55) (mirror_url) (open_issues_count . 12) (forks . 55) (open_issues . 12) (watchers . 209) (default_branch . "master")))
 (_links (self (href . "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls/270")) (html (href . "https://github.com/clojure-emacs/cider-nrepl/pull/270")) (issue (href . "https://api.github.com/repos/clojure-emacs/cider-nrepl/issues/270")) (comments (href . "https://api.github.com/repos/clojure-emacs/cider-nrepl/issues/270/comments")) (review_comments (href . "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls/270/comments")) (review_comment (href . "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls/comments{/number}")) (commits (href . "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls/270/commits")) (statuses (href . "https://api.github.com/repos/clojure-emacs/cider-nrepl/statuses/fbcecbaf10bb55aae875f93810b67b41c833da21")))
 (merged . t)
 (mergeable)
 (mergeable_state . "unknown")
 (merged_by (login . "expez") (id . 1006557) (avatar_url . "https://avatars.githubusercontent.com/u/1006557?v=3") (gravatar_id . "") (url . "https://api.github.com/users/expez") (html_url . "https://github.com/expez") (followers_url . "https://api.github.com/users/expez/followers") (following_url . "https://api.github.com/users/expez/following{/other_user}") (gists_url . "https://api.github.com/users/expez/gists{/gist_id}") (starred_url . "https://api.github.com/users/expez/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expez/subscriptions") (organizations_url . "https://api.github.com/users/expez/orgs") (repos_url . "https://api.github.com/users/expez/repos") (events_url . "https://api.github.com/users/expez/events{/privacy}") (received_events_url . "https://api.github.com/users/expez/received_events") (type . "User") (site_admin))
 (comments . 12)
 (review_comments . 1)
 (commits . 1)
 (additions . 46)
 (deletions . 5)
 (changed_files . 2))
((subject (url . )
          (latest_comment_url . "https://github.com/repos/clojure-emacs/cider-nrepl/issues/comments/155714543")
          (type . "PullRequest")))
(require 'map)

(with-current-buffer "*Github*"
  (mapcar (lambda (x) (let-alist (car x) .subject))
          tabulated-list-entries))
(( (url . ))
 ((title . "Cider overaggressively evaluates forms it shouldn't when you do C-M-x (namespace problem)") (url . "https://api.github.com/repos/clojure-emacs/cider/issues/1403") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/1403") (type . "Issue"))
 ((title . "[Fix #1299] Eval in both REPLs for cljc and cljx") (url . "https://api.github.com/repos/clojure-emacs/cider/commits/a2856c2d7a0ac5dafb6693abae8deba1f07c1672") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/comments/14310306") (type . "Commit"))
 ((title . "[Fix #1299] Eval in both REPLs for cljc and cljx ") (url . "https://api.github.com/repos/clojure-emacs/cider/pulls/1399") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/comments/155470913") (type . "PullRequest"))
 ((title . "[Fix #1405] Always update test-report but pop buffer only as appropriate") (url . "https://api.github.com/repos/clojure-emacs/cider/pulls/1410") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/comments/155467109") (type . "PullRequest")) ((title . "test-report pops up even when all tests pass if the report buffer already exists") (url . "https://api.github.com/repos/clojure-emacs/cider/issues/1405") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/1405") (type . "Issue")) ((title . "cider-refresh with leiningen checkout dependencies?") (url . "https://api.github.com/repos/clojure-emacs/cider/issues/1409") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/1409") (type . "Issue")))


(((subject (title . "Correctly resolve resource full path in Boot projects")
           (url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/pulls/270")
           (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider-nrepl/issues/comments/155714543")
           (type . "PullRequest")))
 ((id . "108613472") (unread . t) (reason . "mention") (updated_at . "2015-11-11T01:20:50Z") (last_read_at . "2015-11-10T00:32:19Z") (subject (title . "Cider overaggressively evaluates forms it shouldn't when you do C-M-x (namespace problem)") (url . "https://api.github.com/repos/clojure-emacs/cider/issues/1403") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/1403") (type . "Issue")) (repository (id . 4118920) (name . "cider") (full_name . "clojure-emacs/cider") (owner (login . "clojure-emacs") (id . 5080083) (avatar_url . "https://avatars.githubusercontent.com/u/5080083?v=3") (gravatar_id . "") (url . "https://api.github.com/users/clojure-emacs") (html_url . "https://github.com/clojure-emacs") (followers_url . "https://api.github.com/users/clojure-emacs/followers") (following_url . "https://api.github.com/users/clojure-emacs/following{/other_user}") (gists_url . "https://api.github.com/users/clojure-emacs/gists{/gist_id}") (starred_url . "https://api.github.com/users/clojure-emacs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/clojure-emacs/subscriptions") (organizations_url . "https://api.github.com/users/clojure-emacs/orgs") (repos_url . "https://api.github.com/users/clojure-emacs/repos") (events_url . "https://api.github.com/users/clojure-emacs/events{/privacy}") (received_events_url . "https://api.github.com/users/clojure-emacs/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/clojure-emacs/cider") (description . "CIDER is a Clojure Interactive Development Environment that Rocks for Emacs") (fork) (url . "https://api.github.com/repos/clojure-emacs/cider") (forks_url . "https://api.github.com/repos/clojure-emacs/cider/forks") (keys_url . "https://api.github.com/repos/clojure-emacs/cider/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/clojure-emacs/cider/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/clojure-emacs/cider/teams") (hooks_url . "https://api.github.com/repos/clojure-emacs/cider/hooks") (issue_events_url . "https://api.github.com/repos/clojure-emacs/cider/issues/events{/number}") (events_url . "https://api.github.com/repos/clojure-emacs/cider/events") (assignees_url . "https://api.github.com/repos/clojure-emacs/cider/assignees{/user}") (branches_url . "https://api.github.com/repos/clojure-emacs/cider/branches{/branch}") (tags_url . "https://api.github.com/repos/clojure-emacs/cider/tags") (blobs_url . "https://api.github.com/repos/clojure-emacs/cider/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/clojure-emacs/cider/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/clojure-emacs/cider/git/refs{/sha}") (trees_url . "https://api.github.com/repos/clojure-emacs/cider/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/clojure-emacs/cider/statuses/{sha}") (languages_url . "https://api.github.com/repos/clojure-emacs/cider/languages") (stargazers_url . "https://api.github.com/repos/clojure-emacs/cider/stargazers") (contributors_url . "https://api.github.com/repos/clojure-emacs/cider/contributors") (subscribers_url . "https://api.github.com/repos/clojure-emacs/cider/subscribers") (subscription_url . "https://api.github.com/repos/clojure-emacs/cider/subscription") (commits_url . "https://api.github.com/repos/clojure-emacs/cider/commits{/sha}") (git_commits_url . "https://api.github.com/repos/clojure-emacs/cider/git/commits{/sha}") (comments_url . "https://api.github.com/repos/clojure-emacs/cider/comments{/number}") (issue_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/comments{/number}") (contents_url . "https://api.github.com/repos/clojure-emacs/cider/contents/{+path}") (compare_url . "https://api.github.com/repos/clojure-emacs/cider/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/clojure-emacs/cider/merges") (archive_url . "https://api.github.com/repos/clojure-emacs/cider/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/clojure-emacs/cider/downloads") (issues_url . "https://api.github.com/repos/clojure-emacs/cider/issues{/number}") (pulls_url . "https://api.github.com/repos/clojure-emacs/cider/pulls{/number}") (milestones_url . "https://api.github.com/repos/clojure-emacs/cider/milestones{/number}") (notifications_url . "https://api.github.com/repos/clojure-emacs/cider/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/clojure-emacs/cider/labels{/name}") (releases_url . "https://api.github.com/repos/clojure-emacs/cider/releases{/id}")) (url . "https://api.github.com/notifications/threads/108613472") (subscription_url . "https://api.github.com/notifications/threads/108613472/subscription"))
 ((id . "108930203") (unread . t) (reason . "mention") (updated_at . "2015-11-10T18:40:26Z") (last_read_at) (subject (title . "[Fix #1299] Eval in both REPLs for cljc and cljx") (url . "https://api.github.com/repos/clojure-emacs/cider/commits/a2856c2d7a0ac5dafb6693abae8deba1f07c1672") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/comments/14310306") (type . "Commit")) (repository (id . 4118920) (name . "cider") (full_name . "clojure-emacs/cider") (owner (login . "clojure-emacs") (id . 5080083) (avatar_url . "https://avatars.githubusercontent.com/u/5080083?v=3") (gravatar_id . "") (url . "https://api.github.com/users/clojure-emacs") (html_url . "https://github.com/clojure-emacs") (followers_url . "https://api.github.com/users/clojure-emacs/followers") (following_url . "https://api.github.com/users/clojure-emacs/following{/other_user}") (gists_url . "https://api.github.com/users/clojure-emacs/gists{/gist_id}") (starred_url . "https://api.github.com/users/clojure-emacs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/clojure-emacs/subscriptions") (organizations_url . "https://api.github.com/users/clojure-emacs/orgs") (repos_url . "https://api.github.com/users/clojure-emacs/repos") (events_url . "https://api.github.com/users/clojure-emacs/events{/privacy}") (received_events_url . "https://api.github.com/users/clojure-emacs/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/clojure-emacs/cider") (description . "CIDER is a Clojure Interactive Development Environment that Rocks for Emacs") (fork) (url . "https://api.github.com/repos/clojure-emacs/cider") (forks_url . "https://api.github.com/repos/clojure-emacs/cider/forks") (keys_url . "https://api.github.com/repos/clojure-emacs/cider/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/clojure-emacs/cider/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/clojure-emacs/cider/teams") (hooks_url . "https://api.github.com/repos/clojure-emacs/cider/hooks") (issue_events_url . "https://api.github.com/repos/clojure-emacs/cider/issues/events{/number}") (events_url . "https://api.github.com/repos/clojure-emacs/cider/events") (assignees_url . "https://api.github.com/repos/clojure-emacs/cider/assignees{/user}") (branches_url . "https://api.github.com/repos/clojure-emacs/cider/branches{/branch}") (tags_url . "https://api.github.com/repos/clojure-emacs/cider/tags") (blobs_url . "https://api.github.com/repos/clojure-emacs/cider/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/clojure-emacs/cider/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/clojure-emacs/cider/git/refs{/sha}") (trees_url . "https://api.github.com/repos/clojure-emacs/cider/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/clojure-emacs/cider/statuses/{sha}") (languages_url . "https://api.github.com/repos/clojure-emacs/cider/languages") (stargazers_url . "https://api.github.com/repos/clojure-emacs/cider/stargazers") (contributors_url . "https://api.github.com/repos/clojure-emacs/cider/contributors") (subscribers_url . "https://api.github.com/repos/clojure-emacs/cider/subscribers") (subscription_url . "https://api.github.com/repos/clojure-emacs/cider/subscription") (commits_url . "https://api.github.com/repos/clojure-emacs/cider/commits{/sha}") (git_commits_url . "https://api.github.com/repos/clojure-emacs/cider/git/commits{/sha}") (comments_url . "https://api.github.com/repos/clojure-emacs/cider/comments{/number}") (issue_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/comments{/number}") (contents_url . "https://api.github.com/repos/clojure-emacs/cider/contents/{+path}") (compare_url . "https://api.github.com/repos/clojure-emacs/cider/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/clojure-emacs/cider/merges") (archive_url . "https://api.github.com/repos/clojure-emacs/cider/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/clojure-emacs/cider/downloads") (issues_url . "https://api.github.com/repos/clojure-emacs/cider/issues{/number}") (pulls_url . "https://api.github.com/repos/clojure-emacs/cider/pulls{/number}") (milestones_url . "https://api.github.com/repos/clojure-emacs/cider/milestones{/number}") (notifications_url . "https://api.github.com/repos/clojure-emacs/cider/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/clojure-emacs/cider/labels{/name}") (releases_url . "https://api.github.com/repos/clojure-emacs/cider/releases{/id}")) (url . "https://api.github.com/notifications/threads/108930203") (subscription_url . "https://api.github.com/notifications/threads/108930203/subscription"))
 ((id . "108356007") (unread . t) (reason . "mention") (updated_at . "2015-11-10T16:19:43Z") (last_read_at . "2015-11-10T09:58:41Z") (subject (title . "[Fix #1299] Eval in both REPLs for cljc and cljx ") (url . "https://api.github.com/repos/clojure-emacs/cider/pulls/1399") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/comments/155470913") (type . "PullRequest")) (repository (id . 4118920) (name . "cider") (full_name . "clojure-emacs/cider") (owner (login . "clojure-emacs") (id . 5080083) (avatar_url . "https://avatars.githubusercontent.com/u/5080083?v=3") (gravatar_id . "") (url . "https://api.github.com/users/clojure-emacs") (html_url . "https://github.com/clojure-emacs") (followers_url . "https://api.github.com/users/clojure-emacs/followers") (following_url . "https://api.github.com/users/clojure-emacs/following{/other_user}") (gists_url . "https://api.github.com/users/clojure-emacs/gists{/gist_id}") (starred_url . "https://api.github.com/users/clojure-emacs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/clojure-emacs/subscriptions") (organizations_url . "https://api.github.com/users/clojure-emacs/orgs") (repos_url . "https://api.github.com/users/clojure-emacs/repos") (events_url . "https://api.github.com/users/clojure-emacs/events{/privacy}") (received_events_url . "https://api.github.com/users/clojure-emacs/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/clojure-emacs/cider") (description . "CIDER is a Clojure Interactive Development Environment that Rocks for Emacs") (fork) (url . "https://api.github.com/repos/clojure-emacs/cider") (forks_url . "https://api.github.com/repos/clojure-emacs/cider/forks") (keys_url . "https://api.github.com/repos/clojure-emacs/cider/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/clojure-emacs/cider/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/clojure-emacs/cider/teams") (hooks_url . "https://api.github.com/repos/clojure-emacs/cider/hooks") (issue_events_url . "https://api.github.com/repos/clojure-emacs/cider/issues/events{/number}") (events_url . "https://api.github.com/repos/clojure-emacs/cider/events") (assignees_url . "https://api.github.com/repos/clojure-emacs/cider/assignees{/user}") (branches_url . "https://api.github.com/repos/clojure-emacs/cider/branches{/branch}") (tags_url . "https://api.github.com/repos/clojure-emacs/cider/tags") (blobs_url . "https://api.github.com/repos/clojure-emacs/cider/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/clojure-emacs/cider/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/clojure-emacs/cider/git/refs{/sha}") (trees_url . "https://api.github.com/repos/clojure-emacs/cider/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/clojure-emacs/cider/statuses/{sha}") (languages_url . "https://api.github.com/repos/clojure-emacs/cider/languages") (stargazers_url . "https://api.github.com/repos/clojure-emacs/cider/stargazers") (contributors_url . "https://api.github.com/repos/clojure-emacs/cider/contributors") (subscribers_url . "https://api.github.com/repos/clojure-emacs/cider/subscribers") (subscription_url . "https://api.github.com/repos/clojure-emacs/cider/subscription") (commits_url . "https://api.github.com/repos/clojure-emacs/cider/commits{/sha}") (git_commits_url . "https://api.github.com/repos/clojure-emacs/cider/git/commits{/sha}") (comments_url . "https://api.github.com/repos/clojure-emacs/cider/comments{/number}") (issue_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/comments{/number}") (contents_url . "https://api.github.com/repos/clojure-emacs/cider/contents/{+path}") (compare_url . "https://api.github.com/repos/clojure-emacs/cider/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/clojure-emacs/cider/merges") (archive_url . "https://api.github.com/repos/clojure-emacs/cider/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/clojure-emacs/cider/downloads") (issues_url . "https://api.github.com/repos/clojure-emacs/cider/issues{/number}") (pulls_url . "https://api.github.com/repos/clojure-emacs/cider/pulls{/number}") (milestones_url . "https://api.github.com/repos/clojure-emacs/cider/milestones{/number}") (notifications_url . "https://api.github.com/repos/clojure-emacs/cider/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/clojure-emacs/cider/labels{/name}") (releases_url . "https://api.github.com/repos/clojure-emacs/cider/releases{/id}")) (url . "https://api.github.com/notifications/threads/108356007") (subscription_url . "https://api.github.com/notifications/threads/108356007/subscription"))
 ((id . "108911467") (unread . t) (reason . "subscribed") (updated_at . "2015-11-10T16:09:11Z") (last_read_at) (subject (title . "[Fix #1405] Always update test-report but pop buffer only as appropriate") (url . "https://api.github.com/repos/clojure-emacs/cider/pulls/1410") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/comments/155467109") (type . "PullRequest")) (repository (id . 4118920) (name . "cider") (full_name . "clojure-emacs/cider") (owner (login . "clojure-emacs") (id . 5080083) (avatar_url . "https://avatars.githubusercontent.com/u/5080083?v=3") (gravatar_id . "") (url . "https://api.github.com/users/clojure-emacs") (html_url . "https://github.com/clojure-emacs") (followers_url . "https://api.github.com/users/clojure-emacs/followers") (following_url . "https://api.github.com/users/clojure-emacs/following{/other_user}") (gists_url . "https://api.github.com/users/clojure-emacs/gists{/gist_id}") (starred_url . "https://api.github.com/users/clojure-emacs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/clojure-emacs/subscriptions") (organizations_url . "https://api.github.com/users/clojure-emacs/orgs") (repos_url . "https://api.github.com/users/clojure-emacs/repos") (events_url . "https://api.github.com/users/clojure-emacs/events{/privacy}") (received_events_url . "https://api.github.com/users/clojure-emacs/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/clojure-emacs/cider") (description . "CIDER is a Clojure Interactive Development Environment that Rocks for Emacs") (fork) (url . "https://api.github.com/repos/clojure-emacs/cider") (forks_url . "https://api.github.com/repos/clojure-emacs/cider/forks") (keys_url . "https://api.github.com/repos/clojure-emacs/cider/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/clojure-emacs/cider/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/clojure-emacs/cider/teams") (hooks_url . "https://api.github.com/repos/clojure-emacs/cider/hooks") (issue_events_url . "https://api.github.com/repos/clojure-emacs/cider/issues/events{/number}") (events_url . "https://api.github.com/repos/clojure-emacs/cider/events") (assignees_url . "https://api.github.com/repos/clojure-emacs/cider/assignees{/user}") (branches_url . "https://api.github.com/repos/clojure-emacs/cider/branches{/branch}") (tags_url . "https://api.github.com/repos/clojure-emacs/cider/tags") (blobs_url . "https://api.github.com/repos/clojure-emacs/cider/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/clojure-emacs/cider/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/clojure-emacs/cider/git/refs{/sha}") (trees_url . "https://api.github.com/repos/clojure-emacs/cider/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/clojure-emacs/cider/statuses/{sha}") (languages_url . "https://api.github.com/repos/clojure-emacs/cider/languages") (stargazers_url . "https://api.github.com/repos/clojure-emacs/cider/stargazers") (contributors_url . "https://api.github.com/repos/clojure-emacs/cider/contributors") (subscribers_url . "https://api.github.com/repos/clojure-emacs/cider/subscribers") (subscription_url . "https://api.github.com/repos/clojure-emacs/cider/subscription") (commits_url . "https://api.github.com/repos/clojure-emacs/cider/commits{/sha}") (git_commits_url . "https://api.github.com/repos/clojure-emacs/cider/git/commits{/sha}") (comments_url . "https://api.github.com/repos/clojure-emacs/cider/comments{/number}") (issue_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/comments{/number}") (contents_url . "https://api.github.com/repos/clojure-emacs/cider/contents/{+path}") (compare_url . "https://api.github.com/repos/clojure-emacs/cider/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/clojure-emacs/cider/merges") (archive_url . "https://api.github.com/repos/clojure-emacs/cider/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/clojure-emacs/cider/downloads") (issues_url . "https://api.github.com/repos/clojure-emacs/cider/issues{/number}") (pulls_url . "https://api.github.com/repos/clojure-emacs/cider/pulls{/number}") (milestones_url . "https://api.github.com/repos/clojure-emacs/cider/milestones{/number}") (notifications_url . "https://api.github.com/repos/clojure-emacs/cider/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/clojure-emacs/cider/labels{/name}") (releases_url . "https://api.github.com/repos/clojure-emacs/cider/releases{/id}")) (url . "https://api.github.com/notifications/threads/108911467") (subscription_url . "https://api.github.com/notifications/threads/108911467/subscription"))
 ((id . "108759755") (unread . t) (reason . "comment") (updated_at . "2015-11-10T16:09:05Z") (last_read_at . "2015-11-10T09:57:09Z") (subject (title . "test-report pops up even when all tests pass if the report buffer already exists") (url . "https://api.github.com/repos/clojure-emacs/cider/issues/1405") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/1405") (type . "Issue")) (repository (id . 4118920) (name . "cider") (full_name . "clojure-emacs/cider") (owner (login . "clojure-emacs") (id . 5080083) (avatar_url . "https://avatars.githubusercontent.com/u/5080083?v=3") (gravatar_id . "") (url . "https://api.github.com/users/clojure-emacs") (html_url . "https://github.com/clojure-emacs") (followers_url . "https://api.github.com/users/clojure-emacs/followers") (following_url . "https://api.github.com/users/clojure-emacs/following{/other_user}") (gists_url . "https://api.github.com/users/clojure-emacs/gists{/gist_id}") (starred_url . "https://api.github.com/users/clojure-emacs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/clojure-emacs/subscriptions") (organizations_url . "https://api.github.com/users/clojure-emacs/orgs") (repos_url . "https://api.github.com/users/clojure-emacs/repos") (events_url . "https://api.github.com/users/clojure-emacs/events{/privacy}") (received_events_url . "https://api.github.com/users/clojure-emacs/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/clojure-emacs/cider") (description . "CIDER is a Clojure Interactive Development Environment that Rocks for Emacs") (fork) (url . "https://api.github.com/repos/clojure-emacs/cider") (forks_url . "https://api.github.com/repos/clojure-emacs/cider/forks") (keys_url . "https://api.github.com/repos/clojure-emacs/cider/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/clojure-emacs/cider/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/clojure-emacs/cider/teams") (hooks_url . "https://api.github.com/repos/clojure-emacs/cider/hooks") (issue_events_url . "https://api.github.com/repos/clojure-emacs/cider/issues/events{/number}") (events_url . "https://api.github.com/repos/clojure-emacs/cider/events") (assignees_url . "https://api.github.com/repos/clojure-emacs/cider/assignees{/user}") (branches_url . "https://api.github.com/repos/clojure-emacs/cider/branches{/branch}") (tags_url . "https://api.github.com/repos/clojure-emacs/cider/tags") (blobs_url . "https://api.github.com/repos/clojure-emacs/cider/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/clojure-emacs/cider/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/clojure-emacs/cider/git/refs{/sha}") (trees_url . "https://api.github.com/repos/clojure-emacs/cider/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/clojure-emacs/cider/statuses/{sha}") (languages_url . "https://api.github.com/repos/clojure-emacs/cider/languages") (stargazers_url . "https://api.github.com/repos/clojure-emacs/cider/stargazers") (contributors_url . "https://api.github.com/repos/clojure-emacs/cider/contributors") (subscribers_url . "https://api.github.com/repos/clojure-emacs/cider/subscribers") (subscription_url . "https://api.github.com/repos/clojure-emacs/cider/subscription") (commits_url . "https://api.github.com/repos/clojure-emacs/cider/commits{/sha}") (git_commits_url . "https://api.github.com/repos/clojure-emacs/cider/git/commits{/sha}") (comments_url . "https://api.github.com/repos/clojure-emacs/cider/comments{/number}") (issue_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/comments{/number}") (contents_url . "https://api.github.com/repos/clojure-emacs/cider/contents/{+path}") (compare_url . "https://api.github.com/repos/clojure-emacs/cider/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/clojure-emacs/cider/merges") (archive_url . "https://api.github.com/repos/clojure-emacs/cider/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/clojure-emacs/cider/downloads") (issues_url . "https://api.github.com/repos/clojure-emacs/cider/issues{/number}") (pulls_url . "https://api.github.com/repos/clojure-emacs/cider/pulls{/number}") (milestones_url . "https://api.github.com/repos/clojure-emacs/cider/milestones{/number}") (notifications_url . "https://api.github.com/repos/clojure-emacs/cider/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/clojure-emacs/cider/labels{/name}") (releases_url . "https://api.github.com/repos/clojure-emacs/cider/releases{/id}")) (url . "https://api.github.com/notifications/threads/108759755") (subscription_url . "https://api.github.com/notifications/threads/108759755/subscription"))
 ((id . "108907785") (unread . t) (reason . "subscribed") (updated_at . "2015-11-10T14:25:31Z") (last_read_at) (subject (title . "cider-refresh with leiningen checkout dependencies?") (url . "https://api.github.com/repos/clojure-emacs/cider/issues/1409") (latest_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/1409") (type . "Issue")) (repository (id . 4118920) (name . "cider") (full_name . "clojure-emacs/cider") (owner (login . "clojure-emacs") (id . 5080083) (avatar_url . "https://avatars.githubusercontent.com/u/5080083?v=3") (gravatar_id . "") (url . "https://api.github.com/users/clojure-emacs") (html_url . "https://github.com/clojure-emacs") (followers_url . "https://api.github.com/users/clojure-emacs/followers") (following_url . "https://api.github.com/users/clojure-emacs/following{/other_user}") (gists_url . "https://api.github.com/users/clojure-emacs/gists{/gist_id}") (starred_url . "https://api.github.com/users/clojure-emacs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/clojure-emacs/subscriptions") (organizations_url . "https://api.github.com/users/clojure-emacs/orgs") (repos_url . "https://api.github.com/users/clojure-emacs/repos") (events_url . "https://api.github.com/users/clojure-emacs/events{/privacy}") (received_events_url . "https://api.github.com/users/clojure-emacs/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/clojure-emacs/cider") (description . "CIDER is a Clojure Interactive Development Environment that Rocks for Emacs") (fork) (url . "https://api.github.com/repos/clojure-emacs/cider") (forks_url . "https://api.github.com/repos/clojure-emacs/cider/forks") (keys_url . "https://api.github.com/repos/clojure-emacs/cider/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/clojure-emacs/cider/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/clojure-emacs/cider/teams") (hooks_url . "https://api.github.com/repos/clojure-emacs/cider/hooks") (issue_events_url . "https://api.github.com/repos/clojure-emacs/cider/issues/events{/number}") (events_url . "https://api.github.com/repos/clojure-emacs/cider/events") (assignees_url . "https://api.github.com/repos/clojure-emacs/cider/assignees{/user}") (branches_url . "https://api.github.com/repos/clojure-emacs/cider/branches{/branch}") (tags_url . "https://api.github.com/repos/clojure-emacs/cider/tags") (blobs_url . "https://api.github.com/repos/clojure-emacs/cider/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/clojure-emacs/cider/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/clojure-emacs/cider/git/refs{/sha}") (trees_url . "https://api.github.com/repos/clojure-emacs/cider/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/clojure-emacs/cider/statuses/{sha}") (languages_url . "https://api.github.com/repos/clojure-emacs/cider/languages") (stargazers_url . "https://api.github.com/repos/clojure-emacs/cider/stargazers") (contributors_url . "https://api.github.com/repos/clojure-emacs/cider/contributors") (subscribers_url . "https://api.github.com/repos/clojure-emacs/cider/subscribers") (subscription_url . "https://api.github.com/repos/clojure-emacs/cider/subscription") (commits_url . "https://api.github.com/repos/clojure-emacs/cider/commits{/sha}") (git_commits_url . "https://api.github.com/repos/clojure-emacs/cider/git/commits{/sha}") (comments_url . "https://api.github.com/repos/clojure-emacs/cider/comments{/number}") (issue_comment_url . "https://api.github.com/repos/clojure-emacs/cider/issues/comments{/number}") (contents_url . "https://api.github.com/repos/clojure-emacs/cider/contents/{+path}") (compare_url . "https://api.github.com/repos/clojure-emacs/cider/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/clojure-emacs/cider/merges") (archive_url . "https://api.github.com/repos/clojure-emacs/cider/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/clojure-emacs/cider/downloads") (issues_url . "https://api.github.com/repos/clojure-emacs/cider/issues{/number}") (pulls_url . "https://api.github.com/repos/clojure-emacs/cider/pulls{/number}") (milestones_url . "https://api.github.com/repos/clojure-emacs/cider/milestones{/number}") (notifications_url . "https://api.github.com/repos/clojure-emacs/cider/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/clojure-emacs/cider/labels{/name}") (releases_url . "https://api.github.com/repos/clojure-emacs/cider/releases{/id}")) (url . "https://api.github.com/notifications/threads/108907785") (subscription_url . "https://api.github.com/notifications/threads/108907785/subscription"))
 )
